name: Destory test environment

on:
  workflow_dispatch:
    inputs:
      topLevelManagementGroup:
        required: true
        default: 'gazelle-test'

permissions:
  id-token: write
  contents: read
  
jobs:
  destroy:
    runs-on: ubuntu-latest
    environment: test
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Azure login
      uses: azure/login@v2
      with:
        client-id: ${{ vars.AZURE_PLATFORM_CLIENT_ID }}
        tenant-id: ${{ vars.AZURE_TENANT_ID}}
        allow-no-subscriptions: true
        enable-AzPSSession: true

    - name: move subscriptions
      uses: azure/powershell@v2
      with:
        azPSVersion: "latest"
        inlineScript: |
          $params = @{
            managementGroup = '${{ inputs.topLevelManagementGroup }}'
          }
          write-output $params
          ./.github/pwsh/move-subscriptions.ps1 @params

    - name: remove management group
      uses: azure/powershell@v2
      with:
        azPSVersion: "latest"
        inlineScript: |
          $params = @{
            managementGroup = '${{ inputs.topLevelManagementGroup }}'
          }
          write-output $params
          ./.github/pwsh/remove-managementGroups.ps1 @params

    - name: remove deployment
      uses: azure/powershell@v2
      with:
        azPSVersion: "latest"
        inlineScript: |
          $deploymants =Get-AzManagementGroupDeployment -ManagementGroupId '${{ inputs.topLevelManagementGroup }}'
          $deploymants.Count
          $deploymants | foreach-object -ThrottleLimit 25 -Parallel {
              Remove-AzManagementGroupDeployment -Id $_.Id -verbose
          }

    - name: remove RBAC
      uses: azure/powershell@v2
      with:
        azPSVersion: "latest"
        inlineScript: |
          $params = @{
            managementGroup = '${{ inputs.topLevelManagementGroup }}'
          }
          write-output $params
          ./.github/pwsh/remove-rbacAssignments.ps1 @params

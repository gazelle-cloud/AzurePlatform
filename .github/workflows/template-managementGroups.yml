name: template - managementGroups

on:
  workflow_call:
    inputs:
        environment:
            required: true
            type: string
        templateFile:
            default: ./managementGroups/bicep/main-managementGroups.bicep
            type: string
        templateParameters:
            default: ./managementGroups/parameters/managementGroups.bicepparam
            type: string
        deploymentName:
            default: managementGroups
            type: string

env:
  topLevelManagementGroupId: /providers/Microsoft.Management/managementGroups/${{ vars.TOP_LEVEL_MANAGEMENTGROUP_NAME }}

jobs:
    managementGroups:
        runs-on: ubuntu-latest
        environment: ${{ inputs.environment }}-azurePlatform
        steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: get github token
          id: github-token
          uses: actions/create-github-app-token@v1
          with:
            app-id: ${{ vars.APP_GITHUB_BIGBANG_ID }}
            private-key: ${{ secrets.APP_GITHUB_BIGBANG }}

        - name: Azure login
          uses: azure/login@v1
          with:
            client-id: ${{ vars.APP_PLATFORM_INIT_CLIENT_ID }}
            tenant-id: ${{ vars.AZURE_TENANT_ID}}
            allow-no-subscriptions: true
            enable-AzPSSession: false

        - name: init RBAC
          uses: azure/cli@v1
          with:
            inlineScript: |
              az role assignment create --assignee ${{ vars.APP_PLATFORM_INIT_PRINCIPAL_ID }} \
               --role "Contributor" \
               --scope ${{ env.topLevelManagementGroupId }}

              az role assignment create --assignee ${{ vars.APP_PLATFORM_INIT_PRINCIPAL_ID }} \
               --role "Azure Deployment Stack Owner" \
               --scope ${{ env.topLevelManagementGroupId }}

        - name: management group hierarchy
          uses: azure/cli@v1
          with:
            inlineScript: |
              az deployment mg create \
               --name ${{ inputs.deploymentName }}-${{ inputs.environment}} \
               --location ${{  vars.AZURE_DEFAULT_LOCATION }} \
               --management-group-id ${{ vars.TOP_LEVEL_MANAGEMENTGROUP_NAME }} \
               --template-file ${{ inputs.templateFile }} \
               --parameters ${{ inputs.templateParameters }} \
               --parameters environment=${{ inputs.environment }} \
               --parameters topLevelManagementGroupName=${{ env.topLevelManagementGroupId }} \
               --parameters managementSubscriptionId=${{ vars.MANAGEMENT_SUBSCRIPTION_ID }}
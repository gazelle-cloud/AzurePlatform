name: template - policy

on:
  workflow_call:
    inputs:
        managementGroupHierarchy:
          required: true
          type: string

jobs:
    identity:
        runs-on: ${{ vars.RUNNER_IMAGE }}
        environment: ${{ inputs.managementGroupHierarchy }}
        steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: get github token
          id: github-token
          uses: actions/create-github-app-token@v1
          with:
            app-id: ${{ vars.APP_GITHUB_AZUREPLATFORM_ID }}
            private-key: ${{ secrets.APP_GITHUB_AZUREPLATFORM_KEY }}
            owner: ${{ github.repository_owner }}

        - name: Azure login
          uses: azure/login@v2
          with:
            client-id: ${{ vars.GAZELLE_CLIENT_ID }}
            tenant-id: ${{ vars.AZURE_TENANT_ID}}
            allow-no-subscriptions: true
            enable-AzPSSession: false

        - name: identity
          uses: azure/cli@v2
          with:
            azcliversion: ${{ vars.AZURE_CLI_VERSION }}
            inlineScript: |
              deployment=$(az stack mg create \
              --name policy-identity \
              --management-group-id ${{ vars.TOP_LEVEL_MANAGEMENTGROUP_NAME }} \
              --location ${{  vars.AZURE_DEFAULT_LOCATION }} \
              --template-file ./src/policy/identity.bicep \
              --parameters './parameters/policy/identity.bicepparam' \
              --parameters environment=${{ inputs.managementGroupHierarchy }} \
              --parameters subscriptionId=${{ vars.MANAGEMENT_SUBSCRIPTION_ID }} \
              --deny-settings-mode None \
              --action-on-unmanage deleteAll \
              --yes)

              envVariables=$(echo $deployment | jq '.outputs.gitHubEnviromentVariables.value')
              echo "Deployment Outputs: $envVariables"
              echo "policyIdentity=$(echo $envVariables | jq -c .)" >> $GITHUB_ENV

        - name: set env variables
          env:
            GH_TOKEN: ${{ steps.github-token.outputs.token }}
          run: |
              deploymentOutputs=$(echo $policyIdentity | jq .)
              echo "Deployment Outputs: $deploymentOutputs"
              
              keys=$(echo $deploymentOutputs | jq -r 'keys[]')
              for key in $keys; do
                value=$(echo $deploymentOutputs | jq --arg k "$key" -r '.[$k]')
                gh variable set $key \
                  --body "$value" \
                  --env ${{ inputs.managementGroupHierarchy }} \
                  -R "${{ github.repository_owner }}/AzurePlatform"
              done

    definitions:
        runs-on: ${{ vars.RUNNER_IMAGE }}
        environment: ${{ inputs.managementGroupHierarchy }}
        steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Azure login
          uses: azure/login@v2
          with:
            client-id: ${{ vars.GAZELLE_CLIENT_ID }}
            tenant-id: ${{ vars.AZURE_TENANT_ID}}
            allow-no-subscriptions: true
            enable-AzPSSession: false

        - name: custom definitions
          uses: azure/cli@v2
          with:
            azcliversion: ${{ vars.AZURE_CLI_VERSION }}
            inlineScript: |
              deployment=$(az stack mg create \
              --name policy-customDefinitions \
              --management-group-id ${{ vars.TOP_LEVEL_MANAGEMENTGROUP_NAME }} \
              --location ${{  vars.AZURE_DEFAULT_LOCATION }} \
              --template-file ./parameters/policy/customDefinitions/main.bicep \
              --deny-settings-mode None \
              --action-on-unmanage deleteAll \
              --yes)

    assignments:
        runs-on: ${{ vars.RUNNER_IMAGE }}
        needs: 
          - definitions
          - identity
        environment: ${{ inputs.managementGroupHierarchy }}
        steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Azure login
          uses: azure/login@v2
          with:
            client-id: ${{ vars.GAZELLE_CLIENT_ID }}
            tenant-id: ${{ vars.AZURE_TENANT_ID}}
            allow-no-subscriptions: true
            enable-AzPSSession: false

        - name: set definitions and assignments
          uses: azure/cli@v2
          with:
            azcliversion: ${{ vars.AZURE_CLI_VERSION }}
            inlineScript: |
              deployment=$(az stack mg create \
              --name policy-assignments \
              --management-group-id ${{ vars.TOP_LEVEL_MANAGEMENTGROUP_NAME }} \
              --location ${{  vars.AZURE_DEFAULT_LOCATION }} \
              --template-file './src/policy/assignments.bicep' \
              --parameters './parameters/policy/assignments.bicepparam' \
              --parameters environment=${{ inputs.managementGroupHierarchy }} \
              --parameters identityResoruceId=${{  vars.POLICY_IDENTITY_RESOURCE_ID }} \
              --deny-settings-mode None \
              --action-on-unmanage deleteAll \
              --yes)